<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__Categorie__CLASSMETADATA__' => 0,
'App__Entity__Contact__CLASSMETADATA__' => 1,
'App__Entity__Destination__CLASSMETADATA__' => 2,
'App__Entity__Reservation__CLASSMETADATA__' => 3,
'App__Entity__Statut__CLASSMETADATA__' => 4,
'App__Entity__User__CLASSMETADATA__' => 5,
'App__Entity__Voyage__CLASSMETADATA__' => 6,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToManyInverseSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToManyInverseSideMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Categorie',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CategorieRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'Description' => $o[2],
                        'NomCategorie' => $o[3],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'description' => 'Description',
                        'nom_categorie' => 'NomCategorie',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'Description' => 'description',
                        'NomCategorie' => 'nom_categorie',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'categorie',
                    ],
                ],
                'associationMappings' => [
                    [
                        'voyages' => $o[4],
                    ],
                ],
                'idGenerator' => [
                    $o[5],
                ],
                'name' => [
                    'App\\Entity\\Categorie',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'Description',
                    'NomCategorie',
                ],
                'columnName' => [
                    1 => 'id',
                    'description',
                    'nom_categorie',
                ],
                'length' => [
                    2 => 255,
                    80,
                ],
                'fetch' => [
                    4 => 2,
                ],
                'sourceEntity' => [
                    4 => 'App\\Entity\\Categorie',
                ],
                'mappedBy' => [
                    4 => 'categorie',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    4 => 'voyages',
                ],
                'targetEntity' => [
                    4 => 'App\\Entity\\Voyage',
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Contact',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ContactRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'Nom' => $o[2],
                        'Prenom' => $o[3],
                        'Email' => $o[4],
                        'Telephone' => $o[5],
                        'Message' => $o[6],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'Nom',
                        'prenom' => 'Prenom',
                        'email' => 'Email',
                        'telephone' => 'Telephone',
                        'message' => 'Message',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'Nom' => 'nom',
                        'Prenom' => 'prenom',
                        'Email' => 'email',
                        'Telephone' => 'telephone',
                        'Message' => 'message',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'contact',
                    ],
                ],
                'associationMappings' => [
                    [
                        'statut' => $o[7],
                    ],
                ],
                'idGenerator' => [
                    $o[9],
                ],
                'name' => [
                    'App\\Entity\\Contact',
                    8 => 'statut_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'Nom',
                    'Prenom',
                    'Email',
                    'Telephone',
                    'Message',
                ],
                'columnName' => [
                    1 => 'id',
                    'nom',
                    'prenom',
                    'email',
                    'telephone',
                    'message',
                ],
                'length' => [
                    2 => 80,
                    80,
                    80,
                    20,
                    255,
                ],
                'fetch' => [
                    7 => 2,
                ],
                'sourceEntity' => [
                    7 => 'App\\Entity\\Contact',
                ],
                'inversedBy' => [
                    7 => 'contact',
                ],
                'sourceToTargetKeyColumns' => [
                    7 => [
                        'statut_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    7 => [
                        'id' => 'statut_id',
                    ],
                ],
                'joinColumns' => [
                    7 => [
                        $o[8],
                    ],
                ],
                'joinColumnFieldNames' => [
                    7 => [
                        'statut_id' => 'statut_id',
                    ],
                ],
                'referencedColumnName' => [
                    8 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    7 => 'statut',
                ],
                'targetEntity' => [
                    7 => 'App\\Entity\\Statut',
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Destination',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\DestinationRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'NomPays' => $o[2],
                        'NomVille' => $o[3],
                        'image' => $o[4],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom_pays' => 'NomPays',
                        'nom_ville' => 'NomVille',
                        'image' => 'image',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'NomPays' => 'nom_pays',
                        'NomVille' => 'nom_ville',
                        'image' => 'image',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'destination',
                    ],
                ],
                'associationMappings' => [
                    [
                        'voyages' => $o[5],
                    ],
                ],
                'idGenerator' => [
                    $o[6],
                ],
                'name' => [
                    'App\\Entity\\Destination',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'NomPays',
                    'NomVille',
                    'image',
                ],
                'columnName' => [
                    1 => 'id',
                    'nom_pays',
                    'nom_ville',
                    'image',
                ],
                'length' => [
                    2 => 80,
                    80,
                    255,
                ],
                'nullable' => [
                    4 => true,
                ],
                'fetch' => [
                    5 => 2,
                ],
                'sourceEntity' => [
                    5 => 'App\\Entity\\Destination',
                ],
                'mappedBy' => [
                    5 => 'destination',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    5 => 'voyages',
                ],
                'targetEntity' => [
                    5 => 'App\\Entity\\Voyage',
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Reservation',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ReservationRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'Nom' => $o[2],
                        'Prenom' => $o[3],
                        'Email' => $o[4],
                        'Telephone' => $o[5],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'Nom',
                        'prenom' => 'Prenom',
                        'email' => 'Email',
                        'telephone' => 'Telephone',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'Nom' => 'nom',
                        'Prenom' => 'prenom',
                        'Email' => 'email',
                        'Telephone' => 'telephone',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'reservation',
                    ],
                ],
                'associationMappings' => [
                    [
                        'voyage' => $o[6],
                        'statut' => $o[8],
                    ],
                ],
                'idGenerator' => [
                    $o[10],
                ],
                'name' => [
                    'App\\Entity\\Reservation',
                    7 => 'voyage_id',
                    9 => 'statut_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'Nom',
                    'Prenom',
                    'Email',
                    'Telephone',
                ],
                'columnName' => [
                    1 => 'id',
                    'nom',
                    'prenom',
                    'email',
                    'telephone',
                ],
                'length' => [
                    2 => 50,
                    50,
                    80,
                    20,
                ],
                'fetch' => [
                    6 => 2,
                    8 => 2,
                ],
                'sourceEntity' => [
                    6 => 'App\\Entity\\Reservation',
                    8 => 'App\\Entity\\Reservation',
                ],
                'inversedBy' => [
                    6 => 'reservations',
                    8 => 'reservations',
                ],
                'sourceToTargetKeyColumns' => [
                    6 => [
                        'voyage_id' => 'id',
                    ],
                    8 => [
                        'statut_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    6 => [
                        'id' => 'voyage_id',
                    ],
                    8 => [
                        'id' => 'statut_id',
                    ],
                ],
                'joinColumns' => [
                    6 => [
                        $o[7],
                    ],
                    8 => [
                        $o[9],
                    ],
                ],
                'joinColumnFieldNames' => [
                    6 => [
                        'voyage_id' => 'voyage_id',
                    ],
                    8 => [
                        'statut_id' => 'statut_id',
                    ],
                ],
                'unique' => [
                    7 => false,
                ],
                'nullable' => [
                    7 => false,
                ],
                'referencedColumnName' => [
                    7 => 'id',
                    9 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    6 => 'voyage',
                    8 => 'statut',
                ],
                'targetEntity' => [
                    6 => 'App\\Entity\\Voyage',
                    8 => 'App\\Entity\\Statut',
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Statut',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\StatutRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'NomStatut' => $o[2],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom_statut' => 'NomStatut',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'NomStatut' => 'nom_statut',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'statut',
                    ],
                ],
                'associationMappings' => [
                    [
                        'contact' => $o[3],
                        'reservations' => $o[4],
                    ],
                ],
                'idGenerator' => [
                    $o[5],
                ],
                'name' => [
                    'App\\Entity\\Statut',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'NomStatut',
                ],
                'columnName' => [
                    1 => 'id',
                    'nom_statut',
                ],
                'length' => [
                    2 => 50,
                ],
                'fetch' => [
                    3 => 2,
                    2,
                ],
                'sourceEntity' => [
                    3 => 'App\\Entity\\Statut',
                    'App\\Entity\\Statut',
                ],
                'mappedBy' => [
                    3 => 'statut',
                    'statut',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    3 => 'contact',
                    'reservations',
                ],
                'targetEntity' => [
                    3 => 'App\\Entity\\Contact',
                    'App\\Entity\\Reservation',
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'Nom' => $o[2],
                        'Prenom' => $o[3],
                        'Telephone' => $o[4],
                        'email' => $o[5],
                        'password' => $o[6],
                        'roles' => $o[7],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'Nom',
                        'prenom' => 'Prenom',
                        'telephone' => 'Telephone',
                        'email' => 'email',
                        'password' => 'password',
                        'roles' => 'roles',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'Nom' => 'nom',
                        'Prenom' => 'prenom',
                        'Telephone' => 'telephone',
                        'email' => 'email',
                        'password' => 'password',
                        'roles' => 'roles',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user',
                        'uniqueConstraints' => [
                            'UNIQ_IDENTIFIER_EMAIL' => [
                                'fields' => [
                                    'email',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'voyages' => $o[8],
                    ],
                ],
                'idGenerator' => [
                    $o[9],
                ],
                'name' => [
                    'App\\Entity\\User',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'json',
                ],
                'fieldName' => [
                    1 => 'id',
                    'Nom',
                    'Prenom',
                    'Telephone',
                    'email',
                    'password',
                    'roles',
                ],
                'columnName' => [
                    1 => 'id',
                    'nom',
                    'prenom',
                    'telephone',
                    'email',
                    'password',
                    'roles',
                ],
                'length' => [
                    2 => 50,
                    50,
                    20,
                    80,
                ],
                'fetch' => [
                    8 => 2,
                ],
                'sourceEntity' => [
                    8 => 'App\\Entity\\User',
                ],
                'mappedBy' => [
                    8 => 'user',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    8 => 'voyages',
                ],
                'targetEntity' => [
                    8 => 'App\\Entity\\Voyage',
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToManyOwningSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToManyOwningSideMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTableMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTableMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Voyage',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\VoyageRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'NomVoyage' => $o[2],
                        'DateDepart' => $o[3],
                        'DateRetour' => $o[4],
                        'Description' => $o[5],
                        'prix' => $o[6],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom_voyage' => 'NomVoyage',
                        'date_depart' => 'DateDepart',
                        'date_retour' => 'DateRetour',
                        'description' => 'Description',
                        'prix' => 'prix',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'NomVoyage' => 'nom_voyage',
                        'DateDepart' => 'date_depart',
                        'DateRetour' => 'date_retour',
                        'Description' => 'description',
                        'prix' => 'prix',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'voyage',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => $o[7],
                        'reservations' => $o[9],
                        'categorie' => $o[10],
                        'destination' => $o[14],
                    ],
                ],
                'idGenerator' => [
                    $o[16],
                ],
                'name' => [
                    'App\\Entity\\Voyage',
                    8 => 'user_id',
                    11 => 'voyage_categorie',
                    'voyage_id',
                    'categorie_id',
                    15 => 'destination_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'date',
                    'date',
                    'string',
                    'integer',
                ],
                'fieldName' => [
                    1 => 'id',
                    'NomVoyage',
                    'DateDepart',
                    'DateRetour',
                    'Description',
                    'prix',
                ],
                'columnName' => [
                    1 => 'id',
                    'nom_voyage',
                    'date_depart',
                    'date_retour',
                    'description',
                    'prix',
                ],
                'length' => [
                    2 => 80,
                    5 => 255,
                ],
                'fetch' => [
                    7 => 2,
                    9 => 2,
                    2,
                    14 => 2,
                ],
                'sourceEntity' => [
                    7 => 'App\\Entity\\Voyage',
                    9 => 'App\\Entity\\Voyage',
                    'App\\Entity\\Voyage',
                    14 => 'App\\Entity\\Voyage',
                ],
                'inversedBy' => [
                    7 => 'voyages',
                    10 => 'voyages',
                    14 => 'voyages',
                ],
                'sourceToTargetKeyColumns' => [
                    7 => [
                        'user_id' => 'id',
                    ],
                    14 => [
                        'destination_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    7 => [
                        'id' => 'user_id',
                    ],
                    14 => [
                        'id' => 'destination_id',
                    ],
                ],
                'joinColumns' => [
                    7 => [
                        $o[8],
                    ],
                    11 => [
                        $o[12],
                    ],
                    14 => [
                        $o[15],
                    ],
                ],
                'joinColumnFieldNames' => [
                    7 => [
                        'user_id' => 'user_id',
                    ],
                    14 => [
                        'destination_id' => 'destination_id',
                    ],
                ],
                'unique' => [
                    8 => false,
                ],
                'nullable' => [
                    8 => false,
                ],
                'referencedColumnName' => [
                    8 => 'id',
                    12 => 'id',
                    'id',
                    15 => 'id',
                ],
                'mappedBy' => [
                    9 => 'voyage',
                ],
                'isOnDeleteCascade' => [
                    10 => true,
                ],
                'joinTable' => [
                    10 => $o[11],
                ],
                'joinTableColumns' => [
                    10 => [
                        'voyage_id',
                        'categorie_id',
                    ],
                ],
                'relationToSourceKeyColumns' => [
                    10 => [
                        'voyage_id' => 'id',
                    ],
                ],
                'relationToTargetKeyColumns' => [
                    10 => [
                        'categorie_id' => 'id',
                    ],
                ],
                'inverseJoinColumns' => [
                    11 => [
                        $o[13],
                    ],
                ],
                'onDelete' => [
                    12 => 'CASCADE',
                    'CASCADE',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    7 => 'user',
                    9 => 'reservations',
                    'categorie',
                    14 => 'destination',
                ],
                'targetEntity' => [
                    7 => 'App\\Entity\\User',
                    9 => 'App\\Entity\\Reservation',
                    'App\\Entity\\Categorie',
                    14 => 'App\\Entity\\Destination',
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
